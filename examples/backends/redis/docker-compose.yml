version: '3.8'

services:
  # Redis server
  redis:
    image: redis:7-alpine
    container_name: fortify-redis-example
    ports:
      - "6379:6379"
    command: >
      redis-server
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save ""
      --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - fortify-net

  # Application instance 1
  app1:
    build:
      context: ../../..
      dockerfile: examples/backends/redis/Dockerfile
    container_name: fortify-app-1
    ports:
      - "8081:8080"
    environment:
      - PORT=8080
      - REDIS_URL=redis:6379
      - INSTANCE_ID=app-1
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - fortify-net

  # Application instance 2
  app2:
    build:
      context: ../../..
      dockerfile: examples/backends/redis/Dockerfile
    container_name: fortify-app-2
    ports:
      - "8082:8080"
    environment:
      - PORT=8080
      - REDIS_URL=redis:6379
      - INSTANCE_ID=app-2
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - fortify-net

  # Application instance 3
  app3:
    build:
      context: ../../..
      dockerfile: examples/backends/redis/Dockerfile
    container_name: fortify-app-3
    ports:
      - "8083:8080"
    environment:
      - PORT=8080
      - REDIS_URL=redis:6379
      - INSTANCE_ID=app-3
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - fortify-net

networks:
  fortify-net:
    driver: bridge
